<?php

/**
 * @file
 * Functions to support theming.
 */

use Drupal\block_content\Entity\BlockContent;
use Drupal\Core\Field\FieldItemList;

/**
 * Implements hook_preprocess_image_widget().
 */
function gt_custom_preprocess_image_widget(array &$variables) {
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gt_custom_preprocess_block(&$variables) {
    // Adds an ID to menu blocks because there is a tift within Drupal core management.
    if (isset ($variables['base_plugin_id'])
        && $variables['base_plugin_id'] === 'system_menu_block'
        && isset($variables['derivative_plugin_id'])) {
        $variables['attributes']['id'] = $variables['derivative_plugin_id'];
    }

    // Look for style classes field and add to markup if provided.
    if (isset($variables['content']['#block_content'])) {
        /** @var BlockContent $block_content */
        $block_content = $variables['content']['#block_content'];
        if ($block_content->hasField('field_style_classes')) {
            try{
                /** @var FieldItemList $field */
                $field = $block_content->get('field_style_classes');
                if ($field instanceof FieldItemList) {
                    $variables['attributes']['class'][] = $field->getValue()[0]['value'];
                }
            }
            catch (Exception $e) {
                // Nothing to do but curse that we used an object poorly.
            }
        }
    }
}

function gt_custom_preprocess_field(&$variables) {
  $bundle = $variables['element']['#bundle'];
  $formatter = $variables['element']['#formatter'];
  if ($bundle === 'person_bio' && $formatter === 'email_mailto') {
    /** @var \Drupal\Core\Url $original_url */
    if ($original_url = $variables['items']['0']['content']['#url']) {
      $uri = $original_url->getUri();
      $variables['items']['0']['image_link'] = [
        '#type' => 'link',
        '#title' => 'Email',
        '#url' => \Drupal\Core\Url::fromUri($uri),
        '#attributes' => [
          'class' => ['image-link-email']
        ]
      ];
    }
  }

}
